{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "summary": "Login",
        "description": "Login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginEntity"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/sign-up": {
      "post": {
        "operationId": "AuthController_register",
        "summary": "Signup",
        "description": "Signup",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupEntity"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/@me": {
      "get": {
        "operationId": "AuthController_getCurrentUser",
        "summary": "Get current user",
        "description": "Get current user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEntity"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        },
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      }
    },
    "/hosts": {
      "post": {
        "operationId": "HostsController_create",
        "summary": "Create new host",
        "description": "Create new host",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateHostDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        },
        "tags": [
          "Hosts"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      },
      "get": {
        "operationId": "HostsController_findAll",
        "summary": "Get all hosts",
        "description": "Get all hosts(requires pagination)",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "description": "The page no for pagination(must start with 1)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "description": "No of records to return(must stay constant for a transaction)",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PartialHost"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Hosts"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      }
    },
    "/hosts/{id}": {
      "get": {
        "operationId": "HostsController_findOne",
        "summary": "Get details of a host",
        "description": "Get all details of a host",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The id of the host",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Host"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        },
        "tags": [
          "Hosts"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      },
      "patch": {
        "operationId": "HostsController_update",
        "summary": "Update host",
        "description": "Update host",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The id of the host",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateHostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        },
        "tags": [
          "Hosts"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      },
      "delete": {
        "operationId": "HostsController_remove",
        "summary": "Delete host",
        "description": "Delete host",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The id of the host",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorEntity"
                }
              }
            }
          }
        },
        "tags": [
          "Hosts"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      }
    },
    "/keys": {
      "post": {
        "operationId": "KeysController_create",
        "summary": "Create a key",
        "description": "Create a key",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateKeyDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Keys"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      },
      "get": {
        "operationId": "KeysController_findAll",
        "summary": "Get all keys",
        "description": "Get all keys(requires pagination)",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "description": "The page no for pagination(must start with 1)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "description": "No of records to return(must stay constant for a transaction)",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PartialKey"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Keys"
        ],
        "security": [
          {
            "JWT-auth": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "Fly SSH",
    "description": "A cross platform SSH client",
    "version": "1.0.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "JWT-auth": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "name": "JWT",
        "description": "Enter JWT token",
        "in": "header",
        "x-tokenName": "Token"
      }
    },
    "schemas": {
      "LoginDTO": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "masterkey": {
            "type": "string",
            "description": "The masterkey generated during register."
          }
        },
        "required": [
          "username",
          "password",
          "masterkey"
        ]
      },
      "UserEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "username"
        ]
      },
      "LoginEntity": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "JWT token which will be used for all other requests"
          },
          "user": {
            "$ref": "#/components/schemas/UserEntity"
          }
        },
        "required": [
          "token",
          "user"
        ]
      },
      "GenericErrorEntity": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "required": [
          "message"
        ]
      },
      "SignupDTO": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "username",
          "password",
          "name"
        ]
      },
      "SignupEntity": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "JWT token which will be used for all other requests"
          },
          "user": {
            "$ref": "#/components/schemas/UserEntity"
          },
          "masterkey": {
            "type": "string"
          }
        },
        "required": [
          "token",
          "user",
          "masterkey"
        ]
      },
      "CreateHostDto": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "hostname": {
            "type": "string",
            "description": "Encrypted hostname"
          },
          "username": {
            "type": "string",
            "description": "Encrypted username"
          },
          "port": {
            "type": "number",
            "description": "The port at which sshd is running"
          },
          "password": {
            "type": "string",
            "description": "Encrypted password",
            "nullable": true
          },
          "keyId": {
            "type": "string",
            "description": "Id of key, existing or new"
          },
          "iv": {
            "type": "string",
            "description": "IV used for encryption",
            "nullable": true
          }
        },
        "required": [
          "label",
          "hostname",
          "username"
        ]
      },
      "GenericResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "PartialKeyWithoutCount": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        },
        "required": [
          "label",
          "id"
        ]
      },
      "PartialHost": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "port": {
            "type": "number"
          },
          "hostname": {
            "type": "string"
          },
          "key": {
            "$ref": "#/components/schemas/PartialKeyWithoutCount"
          },
          "iv": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "label",
          "username",
          "port",
          "hostname",
          "iv"
        ]
      },
      "KeyEntity": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "passphrase": {
            "type": "string"
          },
          "iv": {
            "type": "string"
          }
        },
        "required": [
          "label",
          "id",
          "value",
          "iv"
        ]
      },
      "Host": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "port": {
            "type": "number"
          },
          "hostname": {
            "type": "string"
          },
          "iv": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "$ref": "#/components/schemas/KeyEntity"
          }
        },
        "required": [
          "id",
          "label",
          "username",
          "port",
          "hostname",
          "iv"
        ]
      },
      "UpdateHostDto": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "hostname": {
            "type": "string",
            "description": "Encrypted hostname"
          },
          "username": {
            "type": "string",
            "description": "Encrypted username"
          },
          "port": {
            "type": "number",
            "description": "The port at which sshd is running"
          },
          "password": {
            "type": "string",
            "description": "Encrypted password",
            "nullable": true
          },
          "keyId": {
            "type": "string",
            "description": "Id of key, existing or new"
          },
          "iv": {
            "type": "string",
            "description": "IV used for encryption",
            "nullable": true
          }
        }
      },
      "CreateKeyDTO": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "description": "Label of the key"
          },
          "value": {
            "type": "string",
            "description": "Encrypted 'private' key"
          },
          "passphrase": {
            "type": "string",
            "description": "Passphrase"
          },
          "iv": {
            "type": "string",
            "description": "IV used to encrypt the key"
          }
        },
        "required": [
          "label",
          "value",
          "iv"
        ]
      },
      "Count": {
        "type": "object",
        "properties": {
          "hosts": {
            "type": "number",
            "description": "No of hosts using this key"
          }
        },
        "required": [
          "hosts"
        ]
      },
      "PartialKey": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "_count": {
            "$ref": "#/components/schemas/Count"
          }
        },
        "required": [
          "label",
          "id",
          "_count"
        ]
      }
    }
  }
}